{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","context.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/Rate/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","components/Login.styles.js","components/Login.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Context","createContext","UserProvider","children","useState","undefined","state","setState","Provider","value","Header","useContext","user","to","src","RMDBLogo","alt","username","TMDbLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","Grid","header","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","e","currentTarget","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","Rate","setValue","min","max","backdrop","MovieInfo","handleRaiting","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","charactor","imageUrl","Movie","fetchData","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","character","profile_path","NotFound","Login","setUsername","setPassword","setUser","navigate","useNavigate","handleSubmit","session_id","handleInput","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0033bdfa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  max-width: var(--maxWidth);\r\n  padding: 20px 0;\r\n  margin: 0 auto;\r\n\r\n  a {\r\n    color: var(--white);\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n  width: 200px;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n  width: 100px;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    width: 80px;\r\n  }\r\n`;\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const Context = createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [state, setState] = useState(undefined);\r\n\r\n  return (\r\n    <Context.Provider value={[state, setState]}>{children}</Context.Provider>\r\n  );\r\n};\r\n\r\nexport default UserProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\r\nimport TMDbLogo from \"../../images/tmdb_logo.svg\";\r\n\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./Header.styles\";\r\n\r\nimport { Context } from \"../../context\";\r\n\r\nconst Header = () => {\r\n  const [user] = useContext(Context);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <Link to=\"/\">\r\n          <LogoImg src={RMDBLogo} alt=\"rmdblogo\" />\r\n        </Link>\r\n        {user ? (\r\n          <span>Logged in as: {user.username}</span>\r\n        ) : (\r\n          <Link to=\"/login\">\r\n            <span>Log in</span>\r\n          </Link>\r\n        )}\r\n\r\n        <TMDBLogoImg src={TMDbLogo} alt=\"tmdblogo\" />\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = \"w1280\";\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = \"w780\";\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: linear-gradient(\r\n      to bottom,\r\n      rgba(0, 0, 0, 0) 41%,\r\n      rgba(0, 0, 0, 0.65) 100%\r\n    ),\r\n    url(${({ image }) => image}), var(--darkGrey);\r\n  background-size: 100%, cover;\r\n  background-position: center;\r\n  height: 600px;\r\n  position: relative;\r\n  animation: animateHeroImage 1s;\r\n\r\n  @keyframes animateHeroImage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  z-index: 100;\r\n  max-width: 700px;\r\n  position: absolute;\r\n  bottom: 40px;\r\n  margin-right: 20px;\r\n  min-height: 100px;\r\n  color: var(--white);\r\n\r\n  h1 {\r\n    font-size: var(--fontSuperBig);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n\r\n    p {\r\n      font-size: var(--fontMed);\r\n\r\n      @media screen and (max-width: 720px) {\r\n        font-size: var(--fontSmall);\r\n      }\r\n    }\r\n\r\n    @media screen and (max-width: 720px) {\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Styles\r\nimport { Wrapper, Content, Text } from \"./HeroImage.styles\";\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n  <Wrapper image={image}>\r\n    <Content>\r\n      <Text>\r\n        <h1>{title}</h1>\r\n        <p>{text}</p>\r\n      </Text>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nHeroImage.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default HeroImage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n\r\n  h1 {\r\n    color: var(--medGrey);\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  grid-gap: 2rem;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Wrapper, Content } from \"./Grid.styles\";\r\n\r\nconst Grid = ({ header, children }) => (\r\n  <Wrapper>\r\n    <h1>{header}</h1>\r\n    <Content>{children}</Content>\r\n  </Wrapper>\r\n);\r\n\r\nGrid.propTypes = {\r\n  header: PropTypes.string,\r\n};\r\nexport default Grid;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  max-width: 720px;\r\n  transition: all 0.3;\r\n  object-fit: cover;\r\n  border-radius: 20px;\r\n  animation: animateThumb 0.5s;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  @keyframes animateThumb {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Image } from \"./Thumb.styles\";\r\n\r\nconst Thumb = ({ image, movieId, clickable }) => (\r\n  <div>\r\n    {clickable ? (\r\n      <Link to={`/${movieId}`}>\r\n        <Image src={image} alt=\"moviethumb\" />\r\n      </Link>\r\n    ) : (\r\n      <Image src={image} alt=\"moviethumb\" />\r\n    )}\r\n  </div>\r\n);\r\n\r\nThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  clickable: PropTypes.bool,\r\n};\r\n\r\nexport default Thumb;\r\n","import { Spinner } from \"./Spinner.styles\";\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\n  border: 5px solid var(--lightGrey);\r\n  border-top: 5px solid var(--medGrey);\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  animation: spin 0.8s linear infinite;\r\n  margin: 20px auto;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  height: 55px;\r\n  background: var(--medGrey);\r\n  margin: 0 auto;\r\n  border-radius: 40px;\r\n  color: var(--white);\r\n\r\n  img {\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 14px;\r\n    width: 30px;\r\n  }\r\n\r\n  input {\r\n    font-size: var(--fontBig);\r\n    position: absolute;\r\n    left: 0;\r\n    margin: 8px 0;\r\n    padding: 0 0 0 60px;\r\n    border: 0;\r\n    width: 95%;\r\n    background: transparent;\r\n    height: 40px;\r\n    color: var(--white);\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//Image\r\nimport searchIcon from \"../../images/search-icon.svg\";\r\n\r\n//styles\r\nimport { Wrapper, Content } from \"./SearchBar.styles\";\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n  const [state, setState] = useState(\"\");\r\n  const initial = useRef(true);\r\n\r\n  useEffect(() => {\r\n    //skip the initial render in useEffect\r\n    if (initial.current) {\r\n      initial.current = false;\r\n      return;\r\n    }\r\n\r\n    const timer = setTimeout(() => {\r\n      setSearchTerm(state);\r\n    }, 500);\r\n    //every time before rneder it will trigger this return func\r\n    return () => clearTimeout(timer);\r\n  }, [setSearchTerm, state]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <img src={searchIcon} alt=\"searchIcon\" />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search Movie\"\r\n          onChange={(e) => setState(e.currentTarget.value)}\r\n          value={state}\r\n        />\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  setSearchTerm: PropTypes.func,\r\n};\r\n\r\nexport default SearchBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\n  display: block;\r\n  background: var(--darkGrey);\r\n  width: 25%;\r\n  min-width: 200px;\r\n  height: 60px;\r\n  border-radius: 30px;\r\n  color: var(--white);\r\n  border: 0;\r\n  font-size: var(--fontBig);\r\n  margin: 20px auto;\r\n  transition: all 0.3s;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Wrapper } from \"./Button.styles\";\r\n\r\nconst Button = ({ text, callback }) => (\r\n  <Wrapper type=\"button\" onClick={callback}>\r\n    {text}\r\n  </Wrapper>\r\n);\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  callback: PropTypes.func,\r\n};\r\nexport default Button;\r\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n} from \"./config\";\n\nconst defaultConfig = {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async (movieId) => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async (movieId) => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken,\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData),\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken }),\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value }),\n      })\n    ).json();\n\n    return rating;\n  },\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = (stateName) => {\n  const sessionState = sessionStorage.getItem(stateName);\n\n  return sessionState && JSON.parse(sessionState);\n};\n","import { useState, useEffect } from \"react\";\r\n//API\r\nimport API from \"../API\";\r\n\r\n//Helpers\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nconst initialState = {\r\n  page: 0,\r\n  results: [],\r\n  total_pages: 0,\r\n  total_results: 0,\r\n};\r\n\r\nexport const useHomeFetch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [state, setState] = useState(initialState);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n  const fetchMovies = async (page, searchTerm = \"\") => {\r\n    try {\r\n      setError(false);\r\n      setLoading(true);\r\n\r\n      const movies = await API.fetchMovies(searchTerm, page);\r\n\r\n      setState((prev) => ({\r\n        ...movies,\r\n        results:\r\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results],\r\n      }));\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n  //Initial and search\r\n  useEffect(() => {\r\n    if (!searchTerm) {\r\n      const sessionState = isPersistedState(\"homeState\");\r\n\r\n      if (sessionState) {\r\n        setState(sessionState);\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    setState(initialState);\r\n    fetchMovies(1, searchTerm);\r\n  }, [searchTerm]);\r\n\r\n  //Loading more movies\r\n  useEffect(() => {\r\n    if (!isLoadingMore) return;\r\n\r\n    fetchMovies(state.page + 1, searchTerm);\r\n    setIsLoadingMore(false);\r\n  }, [isLoadingMore, searchTerm, state.page]);\r\n\r\n  //Write to sessionStorage\r\n  useEffect(() => {\r\n    if (!searchTerm) sessionStorage.setItem(\"homeState\", JSON.stringify(state));\r\n  }, [searchTerm, state]);\r\n\r\n  return {\r\n    state,\r\n    loading,\r\n    error,\r\n    setSearchTerm,\r\n    searchTerm,\r\n    setIsLoadingMore,\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React, { useState, useEffect } from \"react\";\r\n\r\n//Config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\r\n//Components\r\nimport HeroImage from \"../components/HeroImage\";\r\nimport Grid from \"./Grid\";\r\nimport Thumb from \"./Thumb\";\r\nimport Spinner from \"./Spinner\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Button from \"./Button\";\r\n//Hook\r\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\r\n//Image\r\nimport NoImage from \"../images/no_image.jpg\";\r\n\r\nconst Home = () => {\r\n  const { state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore } =\r\n    useHomeFetch();\r\n\r\n  if (error) return <div>Something went wrong</div>;\r\n\r\n  return (\r\n    <>\r\n      {!searchTerm && state?.results[0] ? (\r\n        <HeroImage\r\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n          title={state.results[0].original_title}\r\n          text={state.results[0].overview}\r\n        />\r\n      ) : null}\r\n      <SearchBar setSearchTerm={setSearchTerm} />\r\n      <Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\r\n        {state.results.map((movie) => (\r\n          <Thumb\r\n            key={movie.id}\r\n            clickable\r\n            image={\r\n              movie.poster_path\r\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                : NoImage\r\n            }\r\n            movieId={movie.id}\r\n          />\r\n        ))}\r\n      </Grid>\r\n      {loading && <Spinner />}\r\n      {state.page < state.total_pages && !loading && (\r\n        <Button text=\"Load More\" callback={() => setIsLoadingMore(true)} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 70px;\r\n  background: var(--medGrey);\r\n  color: var(--white);\r\n`;\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: var(--maxWidth);\r\n  padding: 0 20px;\r\n\r\n  span {\r\n    font-size: var(--fontMed);\r\n    color: var(--white);\r\n    padding-right: 10px;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Wrapper, Content } from \"./BreadCrumb.styles\";\r\n\r\nconst BreadCrumb = ({ movieTitle }) => (\r\n  <Wrapper>\r\n    <Content>\r\n      <Link to=\"/\">\r\n        <span>Home</span>\r\n      </Link>\r\n      <span>|</span>\r\n      <span>{movieTitle}</span>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nBreadCrumb.propTypes = {\r\n  movieTitle: PropTypes.string,\r\n};\r\n\r\nexport default BreadCrumb;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Rate = ({ callback }) => {\r\n  const [value, setValue] = useState(5);\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"range\"\r\n        min=\"1\"\r\n        max=\"10\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.currentTarget.value)}\r\n      />\r\n      {value}\r\n      <p>\r\n        <button onClick={() => callback(value)}>Rate</button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default Rate;\r\n","import styled from \"styled-components\";\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: ${({ backdrop }) =>\r\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : \"#000\"};\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 40px 20px;\r\n  animation: animateMovieInfo 1s;\r\n\r\n  @keyframes animateMovieInfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  border-radius: 20px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    max-height: none;\r\n  }\r\n`;\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  padding: 20px 40px;\r\n  color: var(--white);\r\n  overflow: hidden;\r\n\r\n  .rating-directors {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .score {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background: #fff;\r\n    color: #000;\r\n    font-weight: 800;\r\n    border-radius: 50%;\r\n    margin: 0;\r\n  }\r\n\r\n  .director {\r\n    margin: 0 0 0 40px;\r\n\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  h1 {\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../../API\";\r\n\r\nimport Thumb from \"../Thumb\";\r\nimport Rate from \"../Rate\";\r\n\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\r\n\r\nimport NoImage from \"../../images/no_image.jpg\";\r\n\r\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\r\n\r\nimport { Context } from \"../../context\";\r\n\r\nconst MovieInfo = ({ movie }) => {\r\n  const [user] = useContext(Context);\r\n\r\n  const handleRaiting = async (value) => {\r\n    const rate = await API.rateMovie(user.sessionId, movie.id, value);\r\n  };\r\n\r\n  return (\r\n    <Wrapper backdrop={movie.backdrop_path}>\r\n      <Content>\r\n        <Thumb\r\n          image={\r\n            movie.poster_path\r\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n              : NoImage\r\n          }\r\n          clickable={false}\r\n        />\r\n        <Text>\r\n          <h1>{movie.title}</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{movie.overview}</p>\r\n\r\n          <div className=\"rating-directors\">\r\n            <div>\r\n              <h3>RAITING</h3>\r\n              <div className=\"score\">{movie.vote_average}</div>\r\n            </div>\r\n            <div className=\"director\">\r\n              <h3>DIRECTOR{movie.directors.length > 1 ? \"S\" : \"\"}</h3>\r\n              {movie.directors.map((director) => (\r\n                <p key={director.credit_id}>{director.name}</p>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          {user && (\r\n            <div>\r\n              <p>Rate Movie</p>\r\n              <Rate callback={handleRaiting} />\r\n            </div>\r\n          )}\r\n        </Text>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nMovieInfo.propTypes = {\r\n  movie: PropTypes.object,\r\n};\r\nexport default MovieInfo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  margin: 0 auto;\r\n\r\n  .column {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: var(--medGrey);\r\n    border-radius: 20px;\r\n    margin: 0 20px;\r\n    flex: 1;\r\n\r\n    :first-child {\r\n      margin-left: 0;\r\n    }\r\n\r\n    :last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n\r\n    .column {\r\n      margin: 20px 0;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Helpers funcs\r\nimport { calcTime, convertMoney } from \"../../helpers\";\r\nimport MovieInfo from \"../MovieInfo\";\r\n\r\nimport { Wrapper, Content } from \"./MovieInfoBar.styles\";\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => (\r\n  <Wrapper>\r\n    <Content>\r\n      <div className=\"column\">\r\n        <p>Running time: {calcTime(time)}</p>\r\n      </div>\r\n      <div className=\"column\">\r\n        <p>Budget: {convertMoney(budget)}</p>\r\n      </div>\r\n      <div className=\"column\">\r\n        <p>Revenue: {convertMoney(revenue)}</p>\r\n      </div>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nMovieInfoBar.propTypes = {\r\n  time: PropTypes.number,\r\n  budget: PropTypes.number,\r\n  revenue: PropTypes.number,\r\n};\r\nexport default MovieInfoBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  color: var(--white);\r\n  background: var(--darkGrey);\r\n  border-radius: 20px;\r\n  padding: 5px;\r\n  text-align: center;\r\n\r\n  h3 {\r\n    margin: 10px 0 0 0;\r\n  }\r\n\r\n  p {\r\n    margin: 5px 0;\r\n  }\r\n`;\r\nexport const Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  border-radius: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Wrapper, Image } from \"./Actor.styles\";\r\n\r\nconst Actor = ({ name, charactor, imageUrl }) => (\r\n  <Wrapper>\r\n    <Image src={imageUrl} alt=\"actor\" />\r\n    <h3>{name}</h3>\r\n    <p>{charactor}</p>\r\n  </Wrapper>\r\n);\r\n\r\nActor.propTypes = {\r\n  name: PropTypes.string,\r\n  charactor: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n};\r\n\r\nexport default Actor;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { BACKDROP_SIZE, IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\r\n\r\nimport Grid from \"./Grid\";\r\nimport Spinner from \"./Spinner\";\r\nimport BreadCrumb from \"./BreadCrumb\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport MovieInfoBar from \"./MovieInfoBar\";\r\nimport Actor from \"./Actor\";\r\n\r\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\r\n\r\nimport NoImage from \"../images/no_image.jpg\";\r\n\r\nconst Movie = () => {\r\n  const { movieId } = useParams();\r\n  const { state: movie, loading, error } = useMovieFetch(movieId);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (error) return <div>Something went wrong</div>;\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumb movieTitle={movie.original_title} />\r\n      <MovieInfo movie={movie} />\r\n      <MovieInfoBar\r\n        time={movie.runtime}\r\n        budget={movie.budget}\r\n        revenue={movie.revenue}\r\n      />\r\n      <Grid header=\"Actors\">\r\n        {movie?.actors.map((actor) => (\r\n          <Actor\r\n            key={actor.credit_id}\r\n            name={actor.name}\r\n            charactor={actor.character}\r\n            imageUrl={\r\n              actor.profile_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                : NoImage\r\n            }\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import { useState, useEffect } from \"react\";\r\nimport API from \"../API\";\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(false);\r\n\r\n        const movie = await API.fetchMovie(movieId);\r\n        const credits = await API.fetchCredits(movieId);\r\n        //get directors only\r\n        const directors = credits.crew.filter(\r\n          (member) => member.job === \"Director\"\r\n        );\r\n\r\n        setState({\r\n          ...movie,\r\n          actors: credits.cast,\r\n          directors,\r\n        });\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n    };\r\n\r\n    const sessionState = isPersistedState(movieId);\r\n\r\n    if (sessionState) {\r\n      setState(sessionState);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    fetchData();\r\n  }, [movieId]);\r\n\r\n  //write to sessionStorage\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(movieId, JSON.stringify(state));\r\n  }, [movieId, state]);\r\n\r\n  return {\r\n    state,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => <div>Not Found</div>;\r\n\r\nexport default NotFound;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  max-width: 320px;\r\n  padding: 20px;\r\n  color: var(--darkGrey);\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 30px;\r\n    border: 1px solid var(--darkGrey);\r\n    border-radius: 20px;\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n  }\r\n\r\n  .error {\r\n    color: red;\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport API from \"../API\";\r\n\r\nimport Button from \"./Button\";\r\n\r\nimport { Wrapper } from \"./Login.styles\";\r\n\r\nimport { Context } from \"../context\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const [_user, setUser] = useContext(Context);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async () => {\r\n    setError(false);\r\n    try {\r\n      const requestToken = await API.getRequestToken();\r\n      const sessionId = await API.authenticate(\r\n        requestToken,\r\n        username,\r\n        password\r\n      );\r\n      setUser({ sessionId: sessionId.session_id, username });\r\n\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    const name = e.currentTarget.name;\r\n    const value = e.currentTarget.value;\r\n\r\n    if (name === \"username\") setUsername(value);\r\n    if (name === \"password\") setPassword(value);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {error && <div className=\"error\">There was an error!</div>}\r\n      <label>Username:</label>\r\n      <input\r\n        type=\"text\"\r\n        value={username}\r\n        name=\"username\"\r\n        onChange={handleInput}\r\n      />\r\n      <label>Password:</label>\r\n      <input\r\n        type=\"password\"\r\n        value={password}\r\n        name=\"password\"\r\n        onChange={handleInput}\r\n      />\r\n      <Button text=\"Login\" callback={handleSubmit} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    :root {\r\n        --maxWidth: 1280px;\r\n        --white: #fff;\r\n        --lightGrey: #eee;\r\n        --medGrey: #353535;\r\n        --darkGrey: #1c1c1c;\r\n        --fontSuperBig: 2.5rem;\r\n        --fontBig: 1.5rem;\r\n        --fontMed: 1.2rem;\r\n        --fontSmall: 1rem;\r\n    }\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n        font-family: 'Abel', sans-serif;\r\n    }\r\n\r\n    body {\r\n        margin: 0;\r\n        padding: 0;\r\n\r\n        h1 {\r\n            font-size: 2rem;\r\n            font-weight: 600;\r\n            color: var(--white);\r\n        }\r\n\r\n        h3{\r\n            font-size: 1.1rem;\r\n            font-weight: 600;\r\n\r\n        }\r\n        p {\r\n            font-size: 1rem;\r\n            color: var(--white);\r\n        }\r\n        \r\n    }\r\n\r\n`;\r\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n//Components\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Movie from \"./components/Movie\";\nimport NotFound from \"./components/NotFound\";\nimport Login from \"./components/Login\";\n//Context\nimport UserProvider from \"./context\";\n\n//Styles\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nconst App = () => (\n  <BrowserRouter>\n    <UserProvider>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/:movieId\" element={<Movie />} />\n        <Route path=\"/*\" element={<NotFound />} />\n        <Route path=\"/login\" element={<Login />} />\n      </Routes>\n      <GlobalStyle />\n    </UserProvider>\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}